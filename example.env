# =============================================================================
# ORBIA BACKEND ENVIRONMENT VARIABLES
# =============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env files to version control

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
NODE_ENV=development
DISABLE_AUTH=false

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
DATABASE_URL=postgresql://username:password@localhost:5432/orbia_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_postgres_password
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=orbia_db

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
JWT_SECRET_KEY=your_jwt_secret_key_here_make_it_long_and_random
PROMETHEUS_USERNAME=admin
PROMETHEUS_PASSWORD=your_prometheus_password

# =============================================================================
# WHATSAPP WEBHOOK CONFIGURATION
# =============================================================================
# WhatsApp Business API credentials from Meta Developer Console
WHATSAPP_ACCESS_TOKEN=your_whatsapp_access_token
WHATSAPP_PHONE_NUMBER_ID=your_phone_number_id
WHATSAPP_APP_SECRET=your_app_secret_for_signature_verification
WHATSAPP_VERIFY_TOKEN=your_custom_verify_token

# =============================================================================
# AI/LLM API KEYS
# =============================================================================
# OpenAI (required for embeddings and fallback LLM)
OPENAI_API_KEY=sk-your_openai_api_key

# Google Gemini (primary LLM for WhatsApp workflow)
GEMINI_API_KEY=your_gemini_api_key

# Perplexity (for people and company search)
PERPLEXITY_API_KEY=your_perplexity_api_key

# Optional: Additional LLM providers
ANTHROPIC_API_KEY=your_anthropic_api_key
DEEPSEEK_API_KEY=your_deepseek_api_key
GROQ_API_KEY=your_groq_api_key
FIREWORKS_API_KEY=your_fireworks_api_key

# Google Cloud (for Vertex AI)
VERTEX_AI_SERVICE_ACCOUNT=path/to/your/service-account.json

# =============================================================================
# MEMORY STORAGE CONFIGURATION (MEM0)
# =============================================================================
# Memory storage backend selection
USE_REDIS_MEM0=false
USE_PGVECTOR_MEM0=false

# Memory collection name
MEM0_COLLECTION_NAME=orbia_whatsapp_memories

# Redis configuration (if USE_REDIS_MEM0=true)
REDIS_URL=redis://localhost:6379
REDIS_USERNAME=your_redis_username
REDIS_PASSWORD=your_redis_password

# =============================================================================
# LANGFUSE OBSERVABILITY (OPTIONAL)
# =============================================================================
LANGFUSE_ENABLED=true
LANGFUSE_PUBLIC_KEY=pk-your_langfuse_public_key
LANGFUSE_SECRET_KEY=sk-your_langfuse_secret_key
LANGFUSE_BASE_URL=https://cloud.langfuse.com
LANGFUSE_PROMPTS_FETCH_ENABLED=true
LANGFUSE_PROMPT_CACHE_TTL_IN_SEC=60

# =============================================================================
# AWS CONFIGURATION (OPTIONAL)
# =============================================================================
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1

# =============================================================================
# EXTERNAL INTEGRATIONS (PLACEHOLDER - NOT YET IMPLEMENTED)
# =============================================================================
# Google Calendar API
GOOGLE_CALENDAR_CLIENT_ID=your_google_client_id
GOOGLE_CALENDAR_CLIENT_SECRET=your_google_client_secret

# Gmail API
GMAIL_CLIENT_ID=your_gmail_client_id
GMAIL_CLIENT_SECRET=your_gmail_client_secret

# Google Drive/Docs API
GOOGLE_DRIVE_CLIENT_ID=your_drive_client_id
GOOGLE_DRIVE_CLIENT_SECRET=your_drive_client_secret

# GitHub API
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret
GITHUB_ACCESS_TOKEN=your_github_personal_access_token

# =============================================================================
# DEVELOPMENT/TESTING
# =============================================================================
# Set to true to enable verbose logging for LiteLLM
LITELLM_VERBOSE=false

# Log level for the application (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Set to true for concise logging format
CONCISE_LOGGING=false

# Set to false to show all deprecation warnings from external libraries
SUPPRESS_DEPRECATION_WARNINGS=true

# =============================================================================
# PRODUCTION DEPLOYMENT
# =============================================================================
# Port for the FastAPI server
PORT=8000

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,https://yourdomain.com

# =============================================================================
# WHATSAPP SETUP INSTRUCTIONS
# =============================================================================
# 1. Create a Meta Developer account at https://developers.facebook.com
# 2. Create a new app and add WhatsApp Business API product
# 3. Get your Access Token from the WhatsApp Business API dashboard
# 4. Get your Phone Number ID from the phone numbers section
# 5. Set up webhook URL: https://yourdomain.com/whatsapp/webhook
# 6. Set webhook verify token (use any random string)
# 7. Subscribe to 'messages' webhook field
# 8. Add your App Secret for signature verification
# 9. Test with the WhatsApp Business API Test Phone Number

# =============================================================================
# PERPLEXITY SETUP INSTRUCTIONS
# =============================================================================
# 1. Sign up for Perplexity API at https://www.perplexity.ai/
# 2. Generate an API key from your dashboard
# 3. Set PERPLEXITY_API_KEY in your environment
# 4. The tool will be used for searching people and companies
# 5. Results are automatically stored in user memories for context

# =============================================================================
# MEMORY STORAGE SETUP INSTRUCTIONS
# =============================================================================
# Option 1: FAISS (Default - In-memory, no setup required)
# - No additional configuration needed
# - Data is not persistent across restarts
# - Good for development and testing
#
# Option 2: Redis (Recommended for production)
# - Set USE_REDIS_MEM0=true
# - Install and configure Redis server
# - Set REDIS_URL, REDIS_USERNAME, REDIS_PASSWORD
#
# Option 3: PostgreSQL with pgvector (Enterprise)
# - Set USE_PGVECTOR_MEM0=true
# - Install pgvector extension in PostgreSQL
# - Use same database as main application 